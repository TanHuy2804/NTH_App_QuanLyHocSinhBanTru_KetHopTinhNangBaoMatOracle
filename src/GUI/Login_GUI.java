/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DAO.DAO_XacThuc;
import DAO.DBConnect;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.sql.*;
import javax.swing.JOptionPane;
import java.util.logging.*;
import oracle.jdbc.OracleTypes;

/**
 *
 * @author Admin
 */
public class Login_GUI extends javax.swing.JFrame {

    private int loginAttempts = 0;
    public static String loggedInUser;

    public static String chucvu_User;

    public static String kitu_User;

    private TrangChu_GUI TrangChu_GUI;
    private final PropertyChangeSupport pcs = new PropertyChangeSupport(this);
    public void addFormReadyListener(PropertyChangeListener listener) {
        pcs.addPropertyChangeListener("formReady", listener);
    }
    private void notifyFormReady() {
        pcs.firePropertyChange("formReady", false, true);
    }
    public TrangChu_GUI getTrangChu_GUI()
    {
        return this.TrangChu_GUI;
    }
    /**
     * Creates new form Login_GUI
     */
    public Login_GUI() {
        initComponents();
        this.setLocationRelativeTo(null);
        setTitle("Login");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_user = new javax.swing.JTextField();
        ckb_showPass = new javax.swing.JCheckBox();
        btn_login = new javax.swing.JButton();
        txt_pass = new javax.swing.JPasswordField();
        lbl_phuongthuc2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semilight", 1, 40)); // NOI18N
        jLabel1.setText("Đăng nhập");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Tên tài khoản:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Mật khẩu:");

        txt_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_userActionPerformed(evt);
            }
        });

        ckb_showPass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ckb_showPass.setText("Hiển thị mật khẩu");
        ckb_showPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckb_showPassActionPerformed(evt);
            }
        });

        btn_login.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_login.setText("ĐĂNG NHẬP");
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });

        lbl_phuongthuc2.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lbl_phuongthuc2.setForeground(new java.awt.Color(51, 102, 255));
        lbl_phuongthuc2.setText("Xác thực khuôn mặt");
        lbl_phuongthuc2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_phuongthuc2MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Phương Thức Khác:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ckb_showPass)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_user, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                                .addComponent(txt_pass)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbl_phuongthuc2)
                                .addComponent(btn_login)))))
                .addGap(9, 9, 9))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(txt_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ckb_showPass)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lbl_phuongthuc2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(btn_login)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel1)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public class CustomLogConfig {
        public static void configure() {
            Logger logger = Logger.getLogger("oracle.jdbc");
            logger.setLevel(Level.WARNING); // Đặt mức log mong muốn

            // Vô hiệu hóa console handler
            for (Handler handler : logger.getParent().getHandlers()) {
                if (handler instanceof ConsoleHandler) {
                    logger.getParent().removeHandler(handler);
                }
            }
        }
    }
    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        // TODO add your handling code here:
        String localhost, port, database, user, pass;
        localhost = "13.82.232.25";
        //localhost = "localhost";
        port = "1521";
        database = "DBHSBT";
        user = txt_user.getText();
        pass = txt_pass.getText();
            try {
                DBConnect.localhost = localhost;
                DBConnect.port = port;
                DBConnect.database = database;
                DBConnect.user = user;
                DBConnect.pass = pass;

                String Url2 = "jdbc:oracle:thin:@13.82.232.25:1521";
                //String Url2 = "jdbc:oracle:thin:@localhost:1521";
                String user2 = "XacMinhNguoiDung";
                String pass2 = "XacMinhNguoiDung";
                String database2 = "DBHSBT";

                try {
                    if (user2.equals("sys") || user2.equals("SYS")) {
                        user2 += " as sysdba";
                    }
                    Connection conn2 = DriverManager.getConnection(Url2 + ":" + database2, user2, pass2);
                    Statement statement = conn2.createStatement();
                    // Sử dụng CallableStatement để gọi thủ tục kiểm tra trạng thái
                    String sql = "{call sys.kiem_tra_trang_thai(?, ?) }";
                    CallableStatement cs = conn2.prepareCall(sql);
                    cs.registerOutParameter(2, Types.VARCHAR);
                    cs.setString(1, user);
                    cs.execute();
                    String status = cs.getString(2);

                    
                    String sql2 = "{call NV001.LayHaiKiTuDau(?, ?) }";
                    CallableStatement cs2 = conn2.prepareCall(sql2);
                    cs2.registerOutParameter(2, Types.VARCHAR);
                    cs2.setString(1, user);
                    cs2.execute();
                    String kitu = cs2.getString(2);
                    kitu_User = kitu;

                    if (!"HS".equals(kitu_User)) {
                        String sql1 = "{call NV001.LAYCHUCVU(?, ?) }";
                        CallableStatement cs1 = conn2.prepareCall(sql1);
                        cs1.registerOutParameter(2, Types.VARCHAR);
                        cs1.setString(1, user);
                        cs1.execute();
                        String chucvu = cs1.getString(2);
                        //System.out.println("Chuc vu: " + chucvu);
                        chucvu_User = chucvu;
                    }
                    conn2.close();
                    // Kiểm tra trạng thái tài khoản
                    if ("LOCKED".equals(status) || "LOCKED(TIMED)".equals(status)) {
                        JOptionPane.showMessageDialog(rootPane, "Tài khoản đã bị khóa");
                    } else {
//                        DBConnect connectionDB = new DBConnect();
//                        Connection conn = connectionDB.GetConnect();
                        if (DBConnect.Connect()) {
                            JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công user " + user);
                            loggedInUser = user;
                            TrangChu_GUI qlc = new TrangChu_GUI();
                            qlc.setVisible(true);
                            dispose();
                            this.dispose();
                        } else {
                            loginAttempts++; // Tăng số lần nhập sai
                            if (loginAttempts < 4) {
                                JOptionPane.showMessageDialog(rootPane, "Thông tin User/Password chưa đúng (Lần " + loginAttempts + "/3)");
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "Tài khoản đã bị khóa");
                            }
                        }
                    }
                } catch (SQLException ex) {
                    //ex.printStackTrace();
                    //JOptionPane.showMessageDialog(this, "Lỗi: " + ex.getMessage());
                }
            } catch (Exception e) {
                e.printStackTrace(); // In thông tin lỗi vào console để xác định vấn đề cụ thể
                //DBConnect.getInstance().close(); // Đóng kết nối
                JOptionPane.showMessageDialog(rootPane, "Lỗi kết nối đến cơ sở dữ liệu");
            }
    }//GEN-LAST:event_btn_loginActionPerformed

    private void ckb_showPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckb_showPassActionPerformed
        // TODO add your handling code here:
        if (ckb_showPass.isSelected()) {
            txt_pass.setEchoChar((char) 0);
        } else {
            txt_pass.setEchoChar('*');
        }
    }//GEN-LAST:event_ckb_showPassActionPerformed
    private static void runCommand(String pythonScriptPath, String pythonScriptFolder, String pythonCommand) {
        try {
            // Tạo một ProcessBuilder           
            ProcessBuilder processBuilder = new ProcessBuilder(pythonCommand, pythonScriptPath);
            // Đặt thư mục làm việc cho ProcessBuilder

            processBuilder.directory(new File(pythonScriptFolder));
            // Redirect standard output to Java application
            processBuilder.redirectErrorStream(true);

            // Bắt đầu quá trình
            Process process = processBuilder.start();

            // Đọc output từ quá trình
            InputStream inputStream = process.getInputStream();
            BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
            String line;
            while ((line = reader.readLine()) != null) {
                System.out.println(line);
            }
            // Đợi quá trình kết thúc
            int exitCode = process.waitFor();
            System.out.println("Exited with error code " + exitCode);

        } catch (IOException | InterruptedException e) {
            //e.printStackTrace();
        }
    }

    private void lbl_phuongthuc2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_phuongthuc2MouseClicked
        // TODO add your handling code here:        
        String pythonScriptPath = "C:\\Users\\SONDAY\\XacThucKhuonMat\\MiAI_FaceRecog_3\\src\\face_rec_cam.py";
        // Đường dẫn đến thư mục chứa file Python
        String pythonScriptFolder = "C:\\Users\\SONDAY\\XacThucKhuonMat\\MiAI_FaceRecog_3";

        // Lệnh Python
        String pythonCommand = "python";
        runCommand(pythonScriptPath, pythonScriptFolder, pythonCommand);
        String localhost, port, database, user, pass;
        localhost = "13.82.232.25";
        port = "1521";
        database = "DBHSBT";
        user = "XacMinhNguoiDung";
        pass = "XacMinhNguoiDung";

        try {
            DBConnect.localhost = localhost;
            DBConnect.port = port;
            DBConnect.database = database;
            DBConnect.user = user;
            DBConnect.pass = pass;
            if (DBConnect.Connect()) {
                System.out.println("Thành công...");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Lỗi hệ thông! ");
            }
        } catch (Exception e) {
            DBConnect.getInstance().close(); // Đóng kết nối
            System.out.println("Kết nối đã đóng");
        }

        //---------------------------------------------
        String filePath = "C:\\Users\\SONDAY\\XacThucKhuonMat\\MiAI_FaceRecog_3\\xacthuckhuongmat.txt";

        String thongtin = "";
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            StringBuilder content = new StringBuilder();
            String line;

            // Đọc từng dòng và thêm vào StringBuilder
            while ((line = reader.readLine()) != null) {
                content.append(line).append("\n");
            }

            thongtin = content.toString().trim();

            // Hiển thị nội dung file
            //JOptionPane.showMessageDialog(rootPane, thongtin);
            System.out.println("Thông tin: " + thongtin);
        } catch (IOException e) {
            //e.printStackTrace();
            //JOptionPane.showMessageDialog(this, "Không thể đọc file", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }

        if (thongtin.equals("KHÔNG XÁC ĐỊNH") == true || thongtin.equals("") == true) {
            JOptionPane.showMessageDialog(rootPane, "Không xác định được tài khoản...");
            txt_user.setText(thongtin);
            return;
        } else {
            String pass1 = DAO_XacThuc.LayThongTinPass(thongtin);
            if (pass1 != null) {
                //JOptionPane.showMessageDialog(rootPane, pass1);
                System.out.println("Password đã lấy: " + pass1);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Xác thực không thành công...1");
            }

            String kq = DAO.DAO_XacThuc.giaiMaPass(pass1);
            if (kq != null) {
                //JOptionPane.showMessageDialog(rootPane, kq);
                System.out.println("Đã giải mã thành công !");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Xác thực không thành công..2");
            }

            txt_user.setText(thongtin);
            txt_pass.setText(kq);
        }
    }//GEN-LAST:event_lbl_phuongthuc2MouseClicked

    private void txt_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_userActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CustomLogConfig.configure();
                new Login_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_login;
    private javax.swing.JCheckBox ckb_showPass;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbl_phuongthuc2;
    private javax.swing.JPasswordField txt_pass;
    private javax.swing.JTextField txt_user;
    // End of variables declaration//GEN-END:variables
}
